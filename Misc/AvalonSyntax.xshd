<?xml version="1.0"?>
<SyntaxDefinition name="Lua" extensions=".lua" xmlns="http://icsharpcode.net/sharpdevelop/syntaxdefinition/2008">
	<Color name="Comment" foreground="#939393" fontStyle="italic"/>
	<Color name="String" foreground="#6EF7A9" />
	<Color name="Foreground" foreground="#E1E1E1" />
	<Color name="Punctuation" foreground="#E1E1E1" />
	<Color name="MethodCall" foreground="#8ED6F7" />
	<Color name="Literals" foreground="#D2AC28"/>
	<Color name="Keywords" foreground="#F12F55" fontWeight="bold"/>
	<Color name="Escapes" foreground="#948AE3" />

	<RuleSet>
		<!-- Mark previous rule-->
		<Rule color="MethodCall">
			\b
			[\d\w_]+	# an identifier
			(?=\s*\() # followed by (
		</Rule>
		<Rule color="MethodCall">
			\b
			[\d\w_]+	# an identifier
			(?=\s*\{) # followed by {
		</Rule>

		<Rule color="Punctuation">
			[\)\(*\&amp;\^\%\$\#@!\\\]\[;':",./&lt;&gt;?\{\}\|\-\=\+]+
		</Rule>

		<Span color="Comment" multiline="true" fontStyle="italic">
			<Begin>--\[[=]*\[</Begin>
			<End>\][=]*\]</End>
		</Span>

		<Span color="Comment" fontStyle="italic">
			<Begin>--</Begin>
		</Span>

		<Span color="String">
			<Begin color="Foreground">"</Begin>
			<End color="Foreground">"</End>
			<RuleSet>
				<Rule color="Escapes">\\\d{1,3}|\\.</Rule>
			</RuleSet>
		</Span>

		<Span color="String">
			<Begin color="Foreground">'</Begin>
			<End color="Foreground">'</End>
			<RuleSet>
				<Rule color="Escapes">\\\d\d?\d?|\\.</Rule>
			</RuleSet>
		</Span>

		<Span color="String" multiline="true">
			<Begin color="Foreground">\[[=]*\[</Begin>
			<End color="Foreground">\][=]*]</End>
		</Span>

		<Keywords color="Literals">
			<Word>true</Word>
			<Word>false</Word>
			<Word>is_visage_closure</Word>
		</Keywords>

		<Keywords color="Keywords">
			<Word>and</Word>
			<Word>break</Word>
      		<Word>continue</Word>
			<Word>do</Word>
			<Word>else</Word>
			<Word>elseif</Word>
			<Word>end</Word>
			<Word>false</Word>
			<Word>for</Word>
			<Word>function</Word>
			<Word>if</Word>
			<Word>in</Word>
			<Word>local</Word>
			<Word>not</Word>
			<Word>or</Word>
			<Word>repeat</Word>
			<Word>return</Word>
			<Word>then</Word>
			<Word>true</Word>
			<Word>until</Word>
			<Word>while</Word> 
		</Keywords>

		<Keywords color="MethodCall">
			<Word>print</Word>
			<Word>warn</Word>
			<Word>error</Word>
			<Word>isreadonly</Word>
			<Word>XPROTECT</Word>
			<Word>LUAPROTECT</Word>
			<Word>setreadonly</Word>
			<Word>readfile</Word>
			<Word>writefile</Word>
			<Word>getrawmetatable</Word>
			<Word>setmetatable</Word>
			<Word>setclipboard</Word>
			<Word>luaformat</Word>
			<Word>RandomString</Word>
			<Word>ReplaceString</Word>
			<Word>HttpPost</Word>
			<Word>queue_on_teleport</Word>
			<Word>GetObjects</Word>
			<Word>gethwid</Word>
			<Word>getnilinstances</Word>
			<Word>getgenv</Word>
			<Word>getrenv</Word>
			<Word>getsenv</Word>
			<Word>getfenv</Word>
			<Word>getreg</Word>
			<Word>getgc</Word>
			<Word>checkcaller</Word>
			<Word>getloadedmodules</Word>
			<Word>getconnections</Word>
			<Word>hookfunction</Word>
			<Word>require</Word>
			<Word>rconsoleprint</Word>
		</Keywords>

		<Keywords color="Literals">
			<Word>nil</Word>
		</Keywords>

		<!-- Digits -->
		<Rule color="Literals">
			\b0[xX][0-9a-fA-F]+	# hex number
			|
			(	\b\d+(\.[0-9]+)?	 #number with optional floating point
			|	\.[0-9]+			 #or just starting with floating point
			)
			([eE][+-]?[0-9]+)? # optional exponent
		</Rule>
	</RuleSet>
</SyntaxDefinition>
